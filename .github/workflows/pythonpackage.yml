# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and deploy

on:
  push:
    branches: [ main ]
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: "${{matrix.os}}"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.7.1
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install additional dependencies
      run: |
        python -m pip install --upgrade pip cryptography
        pip install wheel numpy Cython
        pip install biom-format
    - name: Install MICOM
      run: pip install -e .
    - name: install CPLEX
      run: pip install cplex
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=89 --statistics
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest --cov=micom --cov-report=xml
    - name: Upload to codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.9
      uses: codecov/codecov-action@v3.1.4

  release:
      needs: test
      if: startsWith(github.ref, 'refs/tags')
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4.7.1
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
      - uses: actions/upload-artifact@v3
        with:
          name: python-packages
          path: dist/*
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: 'dist/*'
          body: |
            Please see https://github.com/micom-dev/micom/blob/master/NEWS.md for the full release notes.
          draft: false
          prerelease: false
