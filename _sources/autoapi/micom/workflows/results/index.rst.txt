micom.workflows.results
=======================

.. py:module:: micom.workflows.results

.. autoapi-nested-parse::

   A class for tracking results for growth simulations.



Attributes
----------

.. autoapisummary::

   micom.workflows.results.DIRECTION


Classes
-------

.. autoapisummary::

   micom.workflows.results.GrowthResults


Functions
---------

.. autoapisummary::

   micom.workflows.results.save_results
   micom.workflows.results.load_results
   micom.workflows.results.combine_results


Module Contents
---------------

.. py:data:: DIRECTION

.. py:class:: GrowthResults

   .. py:attribute:: growth_rates
      :type:  pandas.DataFrame


   .. py:attribute:: exchanges
      :type:  pandas.DataFrame


   .. py:attribute:: annotations
      :type:  pandas.DataFrame


   .. py:method:: save(path: str)

      Save growth results to a file.

      This will write all tables as CSV into a single ZIP file.

      :param path: A filepath for the generated file. Should end in `.zip`.
      :type path: str



   .. py:method:: load(path: str) -> GrowthResults
      :staticmethod:


      Load growth results from a file.

      :param path: Path to saved `GrowthResults`.
      :type path: str

      :returns: The loaded growth results.
      :rtype: GrowthResults



   .. py:method:: __add__(other: GrowthResults) -> GrowthResults

      Combine two GrowthResults objects.

      :param other: The other result to merge with the current one.
      :type other: GrowthResults

      :returns: A merged growth result containing data from both.
      :rtype: GrowthResult



   .. py:method:: from_solution(sol: micom.solution.CommunitySolution, com: micom.community.Community) -> GrowthResults
      :staticmethod:


      Convert a solution to growth results.



.. py:function:: save_results(results: GrowthResults, path: str)

   Save growth results to a file.

   This will write all tables as CSV into a single ZIP file.

   :param results: The results as returned from `grow`.
   :type results: GrowthResults
   :param path: A filepath for the generated file. Should end in `.zip`.
   :type path: str


.. py:function:: load_results(path)

   Load growth results from a file.

   :param path: Path to saved `GrowthResults`.
   :type path: str

   :returns: The saved GrowthResults.
   :rtype: GrowthResults


.. py:function:: combine_results(it: Iterable[GrowthResults]) -> GrowthResults

   Combine several GrowthResults.

   :param it: The growth results to combine.
   :type it: Iterable of GrowthResults

   :returns: The merged results.
   :rtype: GrowthResults


